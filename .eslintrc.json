{
   "env": {
      "browser": true,
      "es2021": true
   },
   "extends": [
      "eslint:recommended",
      "plugin:react/recommended",
      "plugin:import/recommended",
      "plugin:jsx-a11y/recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:@typescript-eslint/recommended-requiring-type-checking",
      // This disables the formatting rules in ESLint that Prettier is going to be responsible for handling.
      // Make sure it's always the last config, so it gets the chance to override other configs.
      "eslint-config-prettier"
   ],
   "plugins": ["@typescript-eslint"],

   "settings": {
      // Tells eslint how to resolve imports
      "import/resolver": {
         "node": {
            "paths": ["src"],
            "extensions": [".js", ".jsx", ".ts", ".tsx"]
         }
      }
   },
   "parser": "@typescript-eslint/parser",
   "parserOptions": {
      "ecmaVersion": "latest",
      "sourceType": "module",
      "project": ["tsconfig.json"]
   },

   "rules": {
      "@typescript-eslint/explicit-function-return-type": [
         "error",
         { "allowTypedFunctionExpressions": false }
      ],
      "@typescript-eslint/no-explicit-any": 2,
      "@typescript-eslint/no-unsafe-argument": 2,
      "@typescript-eslint/no-unsafe-assignment": 2,
      "@typescript-eslint/no-unsafe-call": 2,
      "@typescript-eslint/no-unsafe-enum-comparison": 2,
      "@typescript-eslint/no-unsafe-member-access": 2,
      "@typescript-eslint/no-unsafe-return": 2,
      "@typescript-eslint/prefer-readonly": 2,
      "@typescript-eslint/promise-function-async": 2,
      "eqeqeq": 2,
      "no-console": 2,
      "require-await": 2,
      "no-await-in-loop": 2
   }
}
